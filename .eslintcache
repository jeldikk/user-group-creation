[{"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/index.js":"1","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/App.js":"2","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/pages/homepage/homepage.jsx":"3","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/components/header/header.component.jsx":"4","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/pages/create-group-page/create-group-page.jsx":"5","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/components/group-list/group-list.component.jsx":"6","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/components/group-list-item/group-list-item.component.jsx":"7","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/components/user-card/user-card.component.jsx":"8","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/store.js":"9","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/root_reducer.js":"10","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/group/group.reducer.js":"11","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/group/group.types.js":"12","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/group/group.actions.js":"13","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/users/users.reducers.js":"14","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/users/users.types.js":"15","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/users/users.selectors.js":"16","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/components/users-preview/users-preview.component.jsx":"17","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/users/users.actions.js":"18","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/edit/edit.reducers.js":"19","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/edit/edit.types.js":"20","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/edit/edit.actions.js":"21","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/edit/edit.selectors.js":"22"},{"size":804,"mtime":1607241969978,"results":"23","hashOfConfig":"24"},{"size":1395,"mtime":1607200615171,"results":"25","hashOfConfig":"24"},{"size":282,"mtime":1606995164945,"results":"26","hashOfConfig":"24"},{"size":562,"mtime":1606983797732,"results":"27","hashOfConfig":"24"},{"size":6860,"mtime":1607237914641,"results":"28","hashOfConfig":"24"},{"size":975,"mtime":1606996419116,"results":"29","hashOfConfig":"24"},{"size":1100,"mtime":1607238547511,"results":"30","hashOfConfig":"24"},{"size":1284,"mtime":1607204844039,"results":"31","hashOfConfig":"24"},{"size":349,"mtime":1607241875595,"results":"32","hashOfConfig":"24"},{"size":550,"mtime":1607242446321,"results":"33","hashOfConfig":"24"},{"size":654,"mtime":1607238605357,"results":"34","hashOfConfig":"24"},{"size":128,"mtime":1606995986091,"results":"35","hashOfConfig":"24"},{"size":358,"mtime":1606996227037,"results":"36","hashOfConfig":"24"},{"size":773,"mtime":1607016370176,"results":"37","hashOfConfig":"24"},{"size":143,"mtime":1606997985012,"results":"38","hashOfConfig":"24"},{"size":932,"mtime":1607197341481,"results":"39","hashOfConfig":"24"},{"size":1937,"mtime":1607236604667,"results":"40","hashOfConfig":"24"},{"size":171,"mtime":1607016423017,"results":"41","hashOfConfig":"24"},{"size":1628,"mtime":1607237677574,"results":"42","hashOfConfig":"24"},{"size":192,"mtime":1607235306520,"results":"43","hashOfConfig":"24"},{"size":553,"mtime":1607235462339,"results":"44","hashOfConfig":"24"},{"size":2562,"mtime":1607238214836,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y5wvkm",{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/index.js",[],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/App.js",["96","97"],"import React, { Component } from 'react'\n// import logo from './logo.svg';\n// import './App.css';\nimport axios from 'axios'\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport {Route, Switch} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\n\nimport Header from \"./components/header/header.component\"\nimport Homepage from \"./pages/homepage/homepage\"\nimport CreateGroupPage from \"./pages/create-group-page/create-group-page\"\n\nimport {setUsers} from \"./redux/users/users.actions\"\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    \n  }\n\n  // componentDidMount(){\n\n  //   // console.log(\"componenet mounted\")\n\n  //   const fetchData = async () => {\n  //       const results = await axios.get(\"https://s3-ap-southeast-1.amazonaws.com/he-public-data/users49b8675.json\");\n  //       console.log(results.data)\n  //       this.props.setUsers(results.data)\n  //       // this.setState({users: results.data})\n\n  //   }\n    \n  //   fetchData();\n\n\n  // }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Homepage} />\n          <Route path=\"/create\" component={CreateGroupPage} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToState = (dispatch) => {\n  return {\n    setUsers: (userlist) => dispatch(setUsers(userlist))\n  }\n}\n\nexport default connect(null, mapDispatchToState)(App)\n\n",["98","99"],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/pages/homepage/homepage.jsx",[],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/components/header/header.component.jsx",[],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/pages/create-group-page/create-group-page.jsx",["100","101","102","103"],"import React from 'react'\nimport axios from 'axios'\n\nimport {Container, Form, Button} from 'react-bootstrap'\n\nimport {connect} from \"react-redux\"\n\nimport {withRouter} from 'react-router-dom'\n\nimport UserCard from '../../components/user-card/user-card.component'\n\nimport {createGroup} from \"../../redux/group/group.actions\"\n\n\n// import {selectAscOrdered, selectDscOrdered} from \"../../redux/users/users.selectors\"\nimport {selectUserList} from \"../../redux/users/users.selectors\"\nimport {setUsers} from \"../../redux/users/users.actions\"\n\nimport {setEditUsers, setSortOrder} from \"../../redux/edit/edit.actions\"\n\nimport \"./create-group-page.styles.scss\"\nimport UsersPreview from \"../../components/users-preview/users-preview.component\"\n\nclass CreateGroupPage extends React.Component{\n\n    constructor(props){\n        super(props)\n        console.log('creategrouppage constructor ', props)\n        this.state = {\n            users: [],\n            name: '',\n            description: '',\n            ascending: true\n        }\n    }\n\n    componentDidMount(){\n\n        console.log(\"componenet mounted\")\n\n        const fetchData = async () => {\n            const results = await axios.get(\"https://s3-ap-southeast-1.amazonaws.com/he-public-data/users49b8675.json\");\n            console.log(results.data)\n            this.props.setUsers(results.data)\n            const mod_data = results.data.map((user) => ({...user, selected:false}))\n            this.props.setEditUsers(mod_data)\n            this.setState({users: mod_data})\n\n        }\n        \n        fetchData();\n\n\n    }\n\n    handleOnChange = (event) => {\n\n        const {name, value} = event.target;\n\n        this.setState({[name]: value})\n\n    }\n\n    onFormSubmit = (event)=>{\n        event.preventDefault();\n\n        // console.log(this.state)\n        // console.log(\"form submitted\")\n\n        \n        const {name, description} = this.state\n\n        if(name.length === 0 || description.length === 0){\n            console.error(\"Cannot take an empty information\")\n            return\n        }\n        const selectedUsers = this.state.users.filter(user => user.selected)\n\n        this.props.createGroup({\n            name,\n            description,\n            selected: selectedUsers.map(suser => suser.id)\n        })\n\n        this.props.history.push(\"/\")\n    }\n\n    /*\n    We implemented the same in redux\n\n    onUserAdd = (userid)=>{\n\n        console.log('onUserAdd called by', userid)\n        \n        const updatedUsers = this.state.users.map((user) => {\n            if(user.id === userid){\n                return {\n                    ...user,\n                    selected: true\n                }\n            }\n            else{\n                return user\n            }\n        })\n\n        this.setState({users: updatedUsers})\n    }\n\n    /*\n\n    We have implemented the same in redux\n\n    onUserRemove = (userid) => {\n\n        console.log('onUserRemove called by ', userid)\n        \n        const updatedUsers = this.state.users.map((user)=>{\n            if(user.id === userid){\n                return {\n                    ...user,\n                    selected: false\n                }\n            }\n            else{\n                return user\n            }\n        })\n\n        this.setState({users: updatedUsers})\n    }\n\n    */\n\n    onSortOrderChange = (event) => {\n\n        console.log(event);\n\n        const {name, value} = event.target;\n\n        // console.log(name, value)\n\n        switch(value){\n            case 'None':\n                this.props.setSortOrder(null);\n                break;\n            case 'Ascending':\n                this.props.setSortOrder(true);\n                break;\n            case 'Descending':\n                this.props.setSortOrder(false);\n                break;\n        }\n    }\n\n    toggleOrder = () => {\n\n        this.setState({\n            ascending: !this.state.ascending\n        })\n    }\n\n    render(){\n        \n        // const orderedUserList = this.state.ascending ? this.props.inc_ordered : this.props.dsc_ordered\n\n        return (\n\n            <div className=\"create-group-page\">\n                 <Container>\n                     <h1>Create a New Group</h1>\n                     <hr></hr>\n    \n                     <Form>\n                         <Form.Group controlId=\"formGroupName\">\n                             <Form.Label>Name :</Form.Label>\n                             <Form.Control type=\"text\" placeholder=\"Group Name\" name=\"name\" value={this.state.name} onChange={this.handleOnChange} />\n                         </Form.Group>\n                         <Form.Group controlId=\"formGroupDescription\">\n                             <Form.Label>Description :</Form.Label>\n                             <Form.Control as=\"textarea\" rows={3} placeholder=\"Say Something about this group\" name=\"description\" value={this.state.description} onChange={this.handleOnChange} />\n                         </Form.Group>\n\n                         <h3>Select Users</h3>\n                        <div className='sorting-container'>\n                            <Form.Group className=\"sort-control\">\n                                <Form.Label>Sort by Name :</Form.Label>\n                                <Form.Control as='select' name=\"sort_by_name\" onChange={this.onSortOrderChange}>\n                                    <option>None</option>\n                                    <option>Ascending</option>\n                                    <option>Descending</option>\n                                </Form.Control>\n                            </Form.Group>\n                        </div>\n                        \n                            \n                        <UsersPreview userList={this.state.users} onAdd={this.onUserAdd} onRemove={this.onUserRemove} order={this.state.ascending} />\n                         \n                         \n                        <Button type=\"submit\" variant=\"primary\" size=\"lg\" onClick={this.onFormSubmit}>Create Group</Button>\n                     </Form>\n                 </Container>\n            </div>\n        )\n    }\n\n}\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createGroup: (group_info) => dispatch(createGroup(group_info)),\n        setUsers: (userList) => dispatch(setUsers(userList)),\n        setEditUsers: (userList) => dispatch(setEditUsers(userList)),\n        setSortOrder: (order) => dispatch(setSortOrder(order))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userList: selectUserList(state)\n    }\n}\n\n// const mapStateToProps = (state) => {\n//     return {\n//         inc_ordered: selectAscOrdered(state),\n//         dsc_ordered: selectDscOrdered(state)\n//     }\n// }\n\n\n\n// const mapStateToProps = (state, actualProps) => {\n//     return {\n//         orderedList: selectOrdered()\n//     }\n// }\n\nexport default connect(null, mapDispatchToProps)(withRouter(CreateGroupPage))\n","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/components/group-list/group-list.component.jsx",["104"],"import React, { Component } from 'react'\n\nimport GroupListItem from \"../group-list-item/group-list-item.component\"\n\nimport {connect} from \"react-redux\"\n\nimport \"./group-list.styles.scss\"\nclass GroupList extends Component {\n    constructor(props){\n        super(props)\n    }\n\n\n    render() {\n\n        console.log(this.props)\n        return (\n            <div className=\"group-list\">\n                {\n                    this.props.groups.length === 0 ?\n                    <h4>There are no groups defined. create one</h4> :\n                    <h4>There are {this.props.groups.length} number of groups</h4>\n                }\n                {\n                    this.props.groups.map((item) => <GroupListItem key={item.name} item={item} />)\n                }\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state)=>{\n    // console.log(state)\n    return {\n        groups: state.group.groups\n    }\n}\n\nexport default connect(mapStateToProps, null)(GroupList);\n","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/components/group-list-item/group-list-item.component.jsx",[],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/components/user-card/user-card.component.jsx",[],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/store.js",[],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/root_reducer.js",[],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/group/group.reducer.js",[],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/group/group.types.js",[],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/group/group.actions.js",[],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/users/users.reducers.js",[],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/users/users.types.js",[],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/users/users.selectors.js",[],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/components/users-preview/users-preview.component.jsx",["105"],"import React from 'react'\nimport {connect} from 'react-redux'\n\nimport \"./users-preview.styles.scss\"\n\nimport {selectEditOrdered} from \"../../redux/edit/edit.selectors\"\nimport {selectEditUsers} from \"../../redux/edit/edit.selectors\"\n\nimport UserCard from \"../user-card/user-card.component\"\n\nconst UsersPreview = ({orderedList, order=null}) => {\n    // console.log('userpreview',props)\n    // let {orderedList, onAdd, onRemove, order} = props\n    // let orderedList = userList.map(user => ({...user}));\n    // if(!order){\n        \n    //     if(order){\n    //         userList.sort((a,b)=>{\n    //             if(a.name > b.name){\n    //                 return -1\n    //             }\n    //             else if(a.name < b.name){\n    //                 return 1\n    //             }\n    //             else{\n    //                 return 0\n    //             }\n    //         })\n    //     }\n    //     else{\n    //         userList.sort((a,b) => {\n    //             if(a.name > b.name){\n    //                 return 1\n    //             }\n    //             else if(a.name < b.name){\n    //                 return -1\n    //             }\n    //             else{\n    //                 return 0;\n    //             }\n    //         })\n    //     }\n        \n    // }\n    // console.log('orderedList is ', orderedList)\n    // else{\n    //     orderedList = userList;\n    // }\n    \n\n    return (\n        <div className='user-preview'>\n            {\n                // orderedList.map( user => <UserCard key={user.id} user={user} onAdd={onAdd} onRemove={onRemove} />)\n                orderedList.map(user => <UserCard key={user.id} user={user} />)\n            }\n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = (state) => {\n    // console.log(state, actualProps);\n    return {\n        orderedList: selectEditOrdered(state)\n        // orderedList: selectEditUsers(state.edit)\n    }\n}\n\n\nexport default connect(mapStateToProps)(UsersPreview);\n","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/users/users.actions.js",[],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/edit/edit.reducers.js",["106"],"import EditActionTypes from \"./edit.types\"\n\nimport {selectEditUsers} from './edit.selectors'\n\nconst INITIAL_STATE = {\n    name: '',\n    description: '',\n    users:[],\n    order: null\n}\n\nconst editReducer = (state=INITIAL_STATE, action) => {\n\n    switch(action.type){\n        case EditActionTypes.ADD_USER:\n            console.log('stae in editReducer', state)\n            return {\n                ...state,\n                users: state.users.map(user => {\n                    if(user.id === action.payload.id){\n                        return {\n                            ...user,\n                            selected: true\n                        }\n                    }\n                    else{\n                        return user\n                    }\n                })\n\n            }\n        case EditActionTypes.REMOVE_USER:\n            return {\n                ...state,\n                users: state.users.map(user => {\n                    if(user.id === action.payload.id){\n                        return {\n                            ...user,\n                            selected: false\n                        }\n                    }\n                    else{\n                        return user\n                    }\n                })\n            }\n        case EditActionTypes.SET_EDIT_USERS:\n            return {\n                ...state,\n                users: action.payload\n            }\n        case EditActionTypes.SET_SORT_ORDER:\n            return {\n                ...state,\n                order: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default editReducer;","/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/edit/edit.types.js",[],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/edit/edit.actions.js",[],"/home/jk2/workspace/reactTrials/user-group-creation/user-group-creation/src/redux/edit/edit.selectors.js",[],{"ruleId":"107","severity":1,"message":"108","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":21,"column":3,"nodeType":"113","messageId":"114","endLine":25,"endColumn":4},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"107","severity":1,"message":"119","line":10,"column":8,"nodeType":"109","messageId":"110","endLine":10,"endColumn":16},{"ruleId":"107","severity":1,"message":"120","line":139,"column":16,"nodeType":"109","messageId":"110","endLine":139,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":143,"column":9,"nodeType":"123","messageId":"124","endLine":153,"endColumn":10},{"ruleId":"107","severity":1,"message":"125","line":220,"column":7,"nodeType":"109","messageId":"110","endLine":220,"endColumn":22},{"ruleId":"111","severity":1,"message":"112","line":9,"column":5,"nodeType":"113","messageId":"114","endLine":11,"endColumn":6},{"ruleId":"107","severity":1,"message":"126","line":7,"column":9,"nodeType":"109","messageId":"110","endLine":7,"endColumn":24},{"ruleId":"107","severity":1,"message":"126","line":3,"column":9,"nodeType":"109","messageId":"110","endLine":3,"endColumn":24},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"'UserCard' is defined but never used.","'name' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'mapStateToProps' is assigned a value but never used.","'selectEditUsers' is defined but never used.","no-global-assign","no-unsafe-negation"]