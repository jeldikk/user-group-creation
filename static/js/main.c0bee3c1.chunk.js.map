{"version":3,"sources":["components/header/header.component.jsx","redux/group/group.types.js","components/group-list-item/group-list-item.component.jsx","redux/group/group.actions.js","components/group-list/group-list.component.jsx","pages/homepage/homepage.jsx","redux/users/users.selectors.js","redux/users/users.types.js","redux/users/users.actions.js","redux/edit/edit.types.js","redux/edit/edit.selectors.js","components/user-card/user-card.component.jsx","redux/edit/edit.actions.js","components/users-preview/users-preview.component.jsx","pages/create-group-page/create-group-page.jsx","App.js","redux/group/group.reducer.js","redux/users/users.reducers.js","redux/edit/edit.reducers.js","redux/root_reducer.js","redux/store.js","index.js"],"names":["Header","Navbar","bg","variant","Container","className","to","Nav","GroupActionTypes","CREATE_GROUP","REMOVE_GROUP","GroupListItem","props","state","this","item","name","description","Button","onClick","removeGroup","Component","connect","dispatch","group","type","payload","GroupList","console","log","groups","length","map","Homepage","selectUsers","users","UserActionTypes","createSelector","sort","a","b","SET_USERS","ASC_ORDER","DSC_ORDER","setUsers","EditActionTypes","SET_EDIT_USERS","ADD_USER","REMOVE_USER","SET_SORT_ORDER","selectEdit","edit","selectEditUsers","selectSortOrder","order","selectEditOrdered","addUser","user","removeUser","id","Image","selected","src","alt","orderedList","CreateGroupPage","handleOnChange","event","target","value","setState","onFormSubmit","preventDefault","selectedUsers","filter","createGroup","suser","history","push","error","onSortOrderChange","setSortOrder","toggleOrder","ascending","axios","get","results","data","mod_data","setEditUsers","fetchData","Form","Group","controlId","Label","Control","placeholder","onChange","as","rows","userList","onAdd","onUserAdd","onRemove","onUserRemove","size","React","group_info","withRouter","App","exact","path","component","userlist","INITIAL_STATE","groupReducer","action","grp","usersReducer","editReducer","persistConfig","key","storage","whitelist","rootReducer","combineReducers","userReducer","persistReducer","middleware","logger","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0bee3c1.chunk.js","sourcesContent":["import React from 'react'\n\nimport {Navbar, Nav, Container} from 'react-bootstrap'\n\nimport {Link} from \"react-router-dom\"\n\nconst Header = () => {\n\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Container>\n                <Link className=\"navbar-brand\" to=\"/\">User Group Management</Link>\n                <Nav className=\"ml-auto\">\n                    <Link className=\"nav-link\" to=\"/create\"><span className=\"mx-1\">&#10010;</span>New Group</Link>\n                </Nav>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default Header\n","const GroupActionTypes = {\n    CREATE_GROUP: 'CREATE_GROUP',\n    REMOVE_GROUP: 'REMOVE_GROUP'\n}\n\nexport default GroupActionTypes","import React, { Component } from 'react'\n\nimport {Button} from 'react-bootstrap'\nimport {connect} from 'react-redux'\n\nimport {removeGroup} from \"../../redux/group/group.actions\"\n\nimport \"./group-list-item.styles.scss\"\n\nclass GroupListItem extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n\n        }\n    }\n    render() {\n\n        let {name, description} = this.props.item\n        return (\n            <div className=\"group-list-item shadow-lg\">\n                <div className=\"name text-center\">{name}</div>\n                <div className=\"description text-center\">{description}</div>\n                <div className=\"buttons ml-auto\">\n                    {/* <Button variant=\"primary\">Edit</Button> */}\n                    <Button variant=\"danger\" onClick={() => this.props.removeGroup(name)}>Remove</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        removeGroup: (group) => dispatch(removeGroup(group))\n    }\n}\nexport default connect(null, mapDispatchToProps)(GroupListItem)\n","import GroupActionTypes from \"./group.types\"\n\n\nexport const createGroup = (payload)=>{\n\n    return {\n        type: GroupActionTypes.CREATE_GROUP,\n        payload: payload\n    }\n}\n\nexport const removeGroup = (payload) => {\n    return {\n        type: GroupActionTypes.REMOVE_GROUP,\n        payload: payload\n    }\n}\n\n","import React, { Component } from 'react'\n\nimport GroupListItem from \"../group-list-item/group-list-item.component\"\n\nimport {connect} from \"react-redux\"\n\nimport \"./group-list.styles.scss\"\nclass GroupList extends Component {\n    constructor(props){\n        super(props)\n    }\n\n\n    render() {\n\n        console.log(this.props)\n        return (\n            <div className=\"group-list\">\n                {\n                    this.props.groups.length === 0 ?\n                    <h4>There are no groups defined. create one</h4> :\n                    <h4>There are {this.props.groups.length} number of groups</h4>\n                }\n                {\n                    this.props.groups.map((item) => <GroupListItem key={item.name} item={item} />)\n                }\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state)=>{\n    // console.log(state)\n    return {\n        groups: state.group.groups\n    }\n}\n\nexport default connect(mapStateToProps, null)(GroupList);\n","import React from 'react'\n\nimport {Container} from 'react-bootstrap'\n\nimport GroupList from \"../../components/group-list/group-list.component\"\n\nconst Homepage = () => {\n    return (\n        <Container>\n            <GroupList />\n        </Container>\n    )\n}\n\nexport default Homepage\n","\n\nimport {createSelector} from 'reselect'\n\n\nconst selectUsers = (state) => state.users\n\nexport const selectUserList = createSelector(\n    [selectUsers],\n    (users) => users.users\n)\n\n\nexport const selectAscOrdered = createSelector(\n    [selectUsers],\n    (users) => users.sort((a,b) => {\n        if(a.name>b.name){\n            return 1;\n        }\n        else if(a.name<b.name){\n            return -1;\n        }\n        else{\n            return 0;\n        }\n    })\n)\n\nexport const selectDscOrdered = createSelector(\n    [selectUsers],\n    (users) => users.sort((a,b) => {\n        if(a.name>b.name){\n            return -1;\n        }\n        else if(a.name<b.name){\n            return 1;\n        }\n        else{\n            return 0;\n        }\n    })\n)\n\nexport const selectOrdered = (order) => {\n\n    if(order){\n\n        return selectAscOrdered\n    }\n    else{\n        return selectDscOrdered\n    }\n}\n\n// export const selectedOrdered ","const UserActionTypes = {\n    SET_USERS : 'SET_USERS',\n    ASC_ORDER: 'ASC_ORDER',\n    DSC_ORDER: 'DSC_ORDER'\n}\n\nexport default UserActionTypes","import UserActionTypes from \"./users.types\"\n\n\nexport const setUsers = (payload) => {\n    return {\n        type: UserActionTypes.SET_USERS,\n        payload: payload\n    }\n}","const EditActionTypes = {\n    SET_EDIT_USERS: 'SET_EDIT_USERS',\n    ADD_USER: 'ADD_USER',\n    REMOVE_USER: 'REMOVE_USER',\n    SET_SORT_ORDER: 'SET_SORT_ORDER'\n}\n\nexport default EditActionTypes","import {createSelector} from 'reselect'\n\nconst selectEdit = (state) => state.edit\n\nexport const selectEditUsers = createSelector(\n    [selectEdit],\n    (edit) => edit.users\n)\n\nexport const selectSortOrder = createSelector(\n    [selectEdit],\n    (edit) => edit.order\n)\n\n\nexport const selectIncOrderUsers = createSelector(\n    [selectEditUsers],\n    (users) => [...users].sort((a,b) => {\n        if(a.name > b.name){\n            return -1\n        }\n        else if(a.name < b.name){\n            return 1\n        }\n        else{\n            return 0;\n        }\n    })\n)\n\nexport const selectDecOrderUsers = createSelector(\n    [selectEditUsers],\n    (users) => [...users].sort((a,b) => {\n        if(a.name > b.name){\n            return 1\n        }\n        else if(a.name < b.name){\n            return -1\n        }\n        else{\n            return 0;\n        }\n    })\n)\n\nexport const selectEditOrdered = createSelector(\n    [selectEditUsers, selectSortOrder],\n    (users, order) => {\n        console.log(\"calling from selectEditOrdered\")\n        console.log('users is',users)\n        console.log('order is', order)\n        if(order !== null){\n            // do if asc or dsc\n            \n            if(users.length === 0){\n                return users\n            }\n            else\n                return [...users].sort((a,b) => {\n                        // console.log(a,b)\n                        if(a.name > b.name){\n                            if(order)\n                                return 1\n                            else\n                                return -1\n                        }\n                        else if(a.name < b.name){\n                            if(order)\n                                return -1\n                            else\n                                return 1\n                        }\n                        else{\n                            return 0;\n                        }\n\n                    })\n        }\n        else{\n            return users\n        }\n    }\n)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {Button} from \"react-bootstrap\"\n\nimport \"./user-card.styles.scss\"\nimport { addUser, removeUser } from '../../redux/edit/edit.actions'\n\n\nconst UserCard = ({user, addUser, removeUser}) => {\n\n    const {id, name, Image, selected} = user\n    // console.log(user)\n\n    return (\n        <div className=\"user-card\">\n            <div className={`img-container ${selected ? 'selected' : ''}`}>\n                <img className=\"img\" src={Image} alt={`${name}-${id}`} />\n            </div>\n            <div className=\"img-description text-center\">\n                {name}\n            </div>\n\n            {\n                selected ?\n                <Button variant=\"danger\" className=\"my-button\" onClick={() => removeUser(user)}>Remove User</Button> :\n                <Button variant=\"warning\" className=\"my-button\" onClick={() => addUser(user)}>Add User</Button>\n            }\n            {/* // <Button variant=\"warning\" className=\"my-button\">Add to Group</Button> */}\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addUser: (user) => dispatch(addUser(user)),\n        removeUser: (user) => dispatch(removeUser(user))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(UserCard)\n","import EditActionTypes from './edit.types'\n\nexport const setEditUsers = (payload) => {\n    return {\n        type: EditActionTypes.SET_EDIT_USERS,\n        payload: payload\n    }\n}\n\nexport const addUser = (user) => {\n    return {\n        type: EditActionTypes.ADD_USER,\n        payload: user\n    }\n}\n\nexport const removeUser = (user) => {\n    return {\n        type: EditActionTypes.REMOVE_USER,\n        payload: user\n    }\n}\n\nexport const setSortOrder = (order) => {\n    return{\n        type: EditActionTypes.SET_SORT_ORDER,\n        payload: order\n    }\n}","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport \"./users-preview.styles.scss\"\n\nimport {selectEditOrdered} from \"../../redux/edit/edit.selectors\"\n\nimport UserCard from \"../user-card/user-card.component\"\n\nconst UsersPreview = ({orderedList, order=null}) => {\n    // console.log('userpreview',props)\n    // let {orderedList, onAdd, onRemove, order} = props\n    // let orderedList = userList.map(user => ({...user}));\n    // if(!order){\n        \n    //     if(order){\n    //         userList.sort((a,b)=>{\n    //             if(a.name > b.name){\n    //                 return -1\n    //             }\n    //             else if(a.name < b.name){\n    //                 return 1\n    //             }\n    //             else{\n    //                 return 0\n    //             }\n    //         })\n    //     }\n    //     else{\n    //         userList.sort((a,b) => {\n    //             if(a.name > b.name){\n    //                 return 1\n    //             }\n    //             else if(a.name < b.name){\n    //                 return -1\n    //             }\n    //             else{\n    //                 return 0;\n    //             }\n    //         })\n    //     }\n        \n    // }\n    // console.log('orderedList is ', orderedList)\n    // else{\n    //     orderedList = userList;\n    // }\n    \n\n    return (\n        <div className='user-preview'>\n            {\n                // orderedList.map( user => <UserCard key={user.id} user={user} onAdd={onAdd} onRemove={onRemove} />)\n                orderedList.map(user => <UserCard key={user.id} user={user} />)\n            }\n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = (state) => {\n    // console.log(state, actualProps);\n    return {\n        orderedList: selectEditOrdered(state)\n        // orderedList: selectEditUsers(state.edit)\n    }\n}\n\n\nexport default connect(mapStateToProps)(UsersPreview);\n","import React from 'react'\nimport axios from 'axios'\n\nimport {Container, Form, Button} from 'react-bootstrap'\n\nimport {connect} from \"react-redux\"\n\nimport {withRouter} from 'react-router-dom'\n\nimport {createGroup} from \"../../redux/group/group.actions\"\n\nimport {selectUserList} from \"../../redux/users/users.selectors\"\nimport {setUsers} from \"../../redux/users/users.actions\"\n\nimport {setEditUsers, setSortOrder} from \"../../redux/edit/edit.actions\"\n\nimport \"./create-group-page.styles.scss\"\nimport UsersPreview from \"../../components/users-preview/users-preview.component\"\n\n\n\nclass CreateGroupPage extends React.Component{\n\n    constructor(props){\n        super(props)\n        console.log('creategrouppage constructor ', props)\n        this.state = {\n            users: [],\n            name: '',\n            description: '',\n            ascending: true\n        }\n    }\n\n    componentDidMount(){\n\n        console.log(\"componenet mounted\")\n\n        const fetchData = async () => {\n            const results = await axios.get(\"https://s3-ap-southeast-1.amazonaws.com/he-public-data/users49b8675.json\");\n            console.log(results.data)\n            this.props.setUsers(results.data)\n            const mod_data = results.data.map((user) => ({...user, selected:false}))\n            this.props.setEditUsers(mod_data)\n            this.setState({users: mod_data})\n\n        }\n        \n        fetchData();\n\n\n    }\n\n    handleOnChange = (event) => {\n\n        const {name, value} = event.target;\n\n        this.setState({[name]: value})\n\n    }\n\n    onFormSubmit = (event)=>{\n        event.preventDefault();\n        \n        const {name, description} = this.state\n\n        if(name.length === 0 || description.length === 0){\n            console.error(\"Cannot take an empty information\")\n            return\n        }\n        const selectedUsers = this.state.users.filter(user => user.selected)\n\n        this.props.createGroup({\n            name,\n            description,\n            selected: selectedUsers.map(suser => suser.id)\n        })\n\n        this.props.history.push(\"/\")\n    }\n\n\n    onSortOrderChange = (event) => {\n\n        console.log(event);\n\n        const {name, value} = event.target;\n\n        // console.log(name, value)\n\n        switch(value){\n            case 'None':\n                this.props.setSortOrder(null);\n                break;\n            case 'Ascending':\n                this.props.setSortOrder(true);\n                break;\n            case 'Descending':\n                this.props.setSortOrder(false);\n                break;\n        }\n    }\n\n    toggleOrder = () => {\n\n        this.setState({\n            ascending: !this.state.ascending\n        })\n    }\n\n    render(){\n        \n        return (\n\n            <div className=\"create-group-page\">\n                 <Container>\n                     <h1>Create a New Group</h1>\n                     <hr></hr>\n    \n                     <Form>\n                         <Form.Group controlId=\"formGroupName\">\n                             <Form.Label>Name :</Form.Label>\n                             <Form.Control type=\"text\" placeholder=\"Group Name\" name=\"name\" value={this.state.name} onChange={this.handleOnChange} />\n                         </Form.Group>\n                         <Form.Group controlId=\"formGroupDescription\">\n                             <Form.Label>Description :</Form.Label>\n                             <Form.Control as=\"textarea\" rows={3} placeholder=\"Say Something about this group\" name=\"description\" value={this.state.description} onChange={this.handleOnChange} />\n                         </Form.Group>\n\n                         <h3>Select Users</h3>\n                        <div className='sorting-container'>\n                            <Form.Group className=\"sort-control\">\n                                <Form.Label>Sort by Name :</Form.Label>\n                                <Form.Control as='select' name=\"sort_by_name\" onChange={this.onSortOrderChange}>\n                                    <option>None</option>\n                                    <option>Ascending</option>\n                                    <option>Descending</option>\n                                </Form.Control>\n                            </Form.Group>\n                        </div>\n                        \n                            \n                        <UsersPreview userList={this.state.users} onAdd={this.onUserAdd} onRemove={this.onUserRemove} order={this.state.ascending} />\n                         \n                         \n                        <Button type=\"submit\" variant=\"primary\" size=\"lg\" onClick={this.onFormSubmit}>Create Group</Button>\n                     </Form>\n                 </Container>\n            </div>\n        )\n    }\n\n}\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createGroup: (group_info) => dispatch(createGroup(group_info)),\n        setUsers: (userList) => dispatch(setUsers(userList)),\n        setEditUsers: (userList) => dispatch(setEditUsers(userList)),\n        setSortOrder: (order) => dispatch(setSortOrder(order))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userList: selectUserList(state)\n    }\n}\n\n\nexport default connect(null, mapDispatchToProps)(withRouter(CreateGroupPage))\n","import React, { Component } from 'react'\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport {Route, Switch} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\n\nimport Header from \"./components/header/header.component\"\nimport Homepage from \"./pages/homepage/homepage\"\nimport CreateGroupPage from \"./pages/create-group-page/create-group-page\"\n\nimport {setUsers} from \"./redux/users/users.actions\"\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    \n  }\n\n  // componentDidMount(){\n\n  //   // console.log(\"componenet mounted\")\n\n  //   const fetchData = async () => {\n  //       const results = await axios.get(\"https://s3-ap-southeast-1.amazonaws.com/he-public-data/users49b8675.json\");\n  //       console.log(results.data)\n  //       this.props.setUsers(results.data)\n  //       // this.setState({users: results.data})\n\n  //   }\n    \n  //   fetchData();\n\n\n  // }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Homepage} />\n          <Route path=\"/create\" component={CreateGroupPage} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToState = (dispatch) => {\n  return {\n    setUsers: (userlist) => dispatch(setUsers(userlist))\n  }\n}\n\nexport default connect(null, mapDispatchToState)(App)\n\n","import GroupActionTypes from \"./group.types\"\n\nconst INITIAL_STATE = {\n    groups: []\n}\n\nconst groupReducer = (state=INITIAL_STATE, action)=>{\n\n    switch(action.type){\n        case GroupActionTypes.CREATE_GROUP:\n            return {\n                ...state,\n                groups: [...state.groups, action.payload ]\n            }\n        case GroupActionTypes.REMOVE_GROUP:\n            return {\n                ...state,\n                groups: state.groups.filter((grp) => grp.name !== action.payload)\n            }\n        default:\n            return state\n    }\n\n}\n\nexport default groupReducer","import UserActionTypes from \"./users.types\"\n\n// import {selectAscOrdered, selectDscOrdered} from \"./users.selectors\"\n\nconst INITIAL_STATE = {\n    users: []\n}\n\nconst usersReducer = (state=INITIAL_STATE, action) => {\n    switch(action.type){\n        case UserActionTypes.SET_USERS:\n            return {\n                ...state,\n                users: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default usersReducer","import EditActionTypes from \"./edit.types\"\n\nconst INITIAL_STATE = {\n    name: '',\n    description: '',\n    users:[],\n    order: null\n}\n\nconst editReducer = (state=INITIAL_STATE, action) => {\n\n    switch(action.type){\n        case EditActionTypes.ADD_USER:\n            console.log('stae in editReducer', state)\n            return {\n                ...state,\n                users: state.users.map(user => {\n                    if(user.id === action.payload.id){\n                        return {\n                            ...user,\n                            selected: true\n                        }\n                    }\n                    else{\n                        return user\n                    }\n                })\n\n            }\n        case EditActionTypes.REMOVE_USER:\n            return {\n                ...state,\n                users: state.users.map(user => {\n                    if(user.id === action.payload.id){\n                        return {\n                            ...user,\n                            selected: false\n                        }\n                    }\n                    else{\n                        return user\n                    }\n                })\n            }\n        case EditActionTypes.SET_EDIT_USERS:\n            return {\n                ...state,\n                users: action.payload\n            }\n        case EditActionTypes.SET_SORT_ORDER:\n            return {\n                ...state,\n                order: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default editReducer;","import {combineReducers} from 'redux'\nimport {persistReducer} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport groupReducer from \"./group/group.reducer\"\nimport userReducer from \"./users/users.reducers\"\nimport editReducer from \"./edit/edit.reducers\"\n\nconst persistConfig = {\n    key: 'user-group-root',\n    storage,\n    whitelist: ['group', 'users']\n}\n\n\nconst rootReducer = combineReducers({\n    group: groupReducer,\n    users: userReducer,\n    edit: editReducer\n})\nexport default persistReducer(persistConfig, rootReducer)","import {createStore, applyMiddleware} from 'redux'\n\nimport {persistStore} from 'redux-persist'\nimport logger from 'redux-logger'\nimport rootReducer from \"./root_reducer\"\n\nconst middleware = [logger];\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleware))\nexport const persistor = persistStore(store)\n\n// export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport {BrowserRouter} from \"react-router-dom\"\nimport {Provider} from \"react-redux\"\nimport {PersistGate} from 'redux-persist/integration/react'\nimport {store, persistor} from \"./redux/store\"\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}